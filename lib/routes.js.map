{"version":3,"sources":["../src/routes.js"],"names":[],"mappings":";;;;;;;;;;;;qBAEkB,OAAO;;;;qCACN,0BAA0B;;;;8BAC5B,mBAAmB;;;;6BACpB,kBAAkB;;;;qCACV,0BAA0B;;;;qCAC1B,0BAA0B;;;;mCAC5B,wBAAwB;;;;sCACrB,2BAA2B;;;;sCAC3B,2BAA2B;;;;mCAC9B,wBAAwB;;;;AAE9C,IAAM,MAAM,GAAG,uCAAW,UAAA,EAAE,EAAI;AAC9B,IAAE,CAAC,GAAG,EAAE,oBAAO,KAAK,EAAE,IAAI;QAClB,SAAS;;;;;0CAAS,IAAI,EAAE;;;AAAxB,mBAAS;8CACR,SAAS,IAAI;;cAAK,OAAO,EAAE,KAAK,CAAC,OAAO,AAAC;YAAE,SAAS;WAAO;;;;;;;GACnE,CAAC,CAAC;;AAEH,IAAE,CAAC,UAAU,EAAE;;;;8CAAY,0EAAe;;;;;;;GAAA,CAAC,CAAC;;AAE5C,IAAE,CAAC,QAAQ,EAAE;;;;8CAAY,wEAAa;;;;;;;GAAA,CAAC,CAAC;;AAExC,IAAE,CAAC,WAAW,EAAE;;;;8CAAY,2EAAgB;;;;;;;GAAA,CAAC,CAAC;;AAE9C,IAAE,CAAC,GAAG,EAAE,oBAAO,KAAK;QACZ,OAAO;;;;;0CAAS,4BAAK,GAAG,wBAAsB,KAAK,CAAC,IAAI,CAAG;;;AAA3D,iBAAO;8CACN,OAAO,IAAI,qEAAiB,OAAO,CAAI;;;;;;;GAC/C,CAAC,CAAC;;AAEH,IAAE,CAAC,OAAO,EAAE,UAAC,KAAK,EAAE,KAAK;WAAK,KAAK,CAAC,UAAU,KAAK,GAAG,GACpD;;QAAK,OAAO,EAAE,KAAK,CAAC,OAAO,AAAC,EAAC,KAAK,EAAE,KAAK,AAAC;MAAC,2EAAgB;KAAM,GACjE;;QAAK,OAAO,EAAE,KAAK,CAAC,OAAO,AAAC,EAAC,KAAK,EAAE,KAAK,AAAC;MAAC,wEAAa;KAAM;GAAA,CAC/D,CAAC;CACH,CAAC,CAAC;;qBAEY,MAAM","file":"routes.js","sourcesContent":["/*! React Starter Kit | MIT License | http://www.reactstarterkit.com/ */\n\nimport React from 'react';\nimport Router from 'react-routing/src/Router';\nimport http from './core/HttpClient';\nimport App from './components/App';\nimport ContentPage from './components/ContentPage';\nimport ContactPage from './components/ContactPage';\nimport LoginPage from './components/LoginPage';\nimport RegisterPage from './components/RegisterPage';\nimport NotFoundPage from './components/NotFoundPage';\nimport ErrorPage from './components/ErrorPage';\n\nconst router = new Router(on => {\n  on('*', async (state, next) => {\n    const component = await next();\n    return component && <App context={state.context}>{component}</App>;\n  });\n\n  on('/contact', async () => <ContactPage />);\n\n  on('/login', async () => <LoginPage />);\n\n  on('/register', async () => <RegisterPage />);\n\n  on('*', async (state) => {\n    const content = await http.get(`/api/content?path=${state.path}`);\n    return content && <ContentPage {...content} />;\n  });\n\n  on('error', (state, error) => state.statusCode === 404 ?\n    <App context={state.context} error={error}><NotFoundPage /></App> :\n    <App context={state.context} error={error}><ErrorPage /></App>\n  );\n});\n\nexport default router;\n"]}