{"version":3,"sources":["../../src/utils/fs.js"],"names":[],"mappings":";;;;;;;;;;kBAEe,IAAI;;;;AAEnB,IAAM,MAAM,GAAG,SAAT,MAAM,CAAG,QAAQ;SAAI,IAAI,OAAO,CAAC,UAAA,OAAO,EAAI;AAChD,oBAAG,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;GAC9B,CAAC;CAAA,CAAC;;AAEH,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAG,QAAQ;SAAI,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AAC5D,oBAAG,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AAC3C,UAAI,GAAG,EAAE;AACP,cAAM,CAAC,GAAG,CAAC,CAAC;OACb,MAAM;AACL,eAAO,CAAC,IAAI,CAAC,CAAC;OACf;KACF,CAAC,CAAC;GACJ,CAAC;CAAA,CAAC;;qBAEY,EAAE,MAAM,EAAN,MAAM,EAAE,QAAQ,EAAR,QAAQ,EAAE","file":"fs.js","sourcesContent":["/*! React Starter Kit | MIT License | http://www.reactstarterkit.com/ */\n\nimport fs from 'fs';\n\nconst exists = filename => new Promise(resolve => {\n  fs.exists(filename, resolve);\n});\n\nconst readFile = filename => new Promise((resolve, reject) => {\n  fs.readFile(filename, 'utf8', (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(data);\n    }\n  });\n});\n\nexport default { exists, readFile };\n"]}