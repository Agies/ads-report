{"version":3,"sources":["../../src/decorators/withViewport.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;qBAEiC,OAAO;;;;;;6BACf,eAAe;;;;2CACd,+BAA+B;;AAEzD,IAAI,EAAE,YAAA,CAAC;AACP,IAAI,QAAQ,GAAG,EAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC;AAC1C,IAAM,YAAY,GAAG,QAAQ,CAAC;;AAE9B,SAAS,kBAAkB,GAAG;AAC5B,MAAI,QAAQ,CAAC,KAAK,KAAK,MAAM,CAAC,UAAU,IAAI,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC,WAAW,EAAE;AAClF,YAAQ,GAAG,EAAC,KAAK,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,WAAW,EAAC,CAAC;AAClE,MAAE,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;GACjC;CACF;;AAED,SAAS,YAAY,CAAC,iBAAiB,EAAE;AACvC;cAAa,YAAY;;AAEZ,aAFA,YAAY,GAET;4BAFH,YAAY;;AAGrB,iCAHS,YAAY,6CAGb;;AAER,UAAI,CAAC,KAAK,GAAG;AACX,gBAAQ,EAAE,yCAAY,EAAC,KAAK,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,WAAW,EAAC,GAAG,QAAQ;OACxF,CAAC;KACH;;iBARU,YAAY;;aAUN,6BAAG;AAClB,YAAI,CAAC,EAAE,EAAE;AACP,YAAE,GAAG,gCAAkB,CAAC;AACxB,gBAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AACtD,gBAAM,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;SAClE;;AAED,UAAE,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;OAC9C;;;aAEmB,gCAAG;AACrB,UAAE,CAAC,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AACzD,YAAI,CAAC,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;AACrC,gBAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;AACzD,gBAAM,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;AACpE,YAAE,GAAG,IAAI,CAAC;SACX;OACF;;;aAEK,kBAAG;AACP,eAAO,iCAAC,iBAAiB,eAAK,IAAI,CAAC,KAAK,IAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,AAAC,IAAE,CAAC;OAC5E;;;aAEW,sBAAC,KAAK,EAAE;AAClB,YAAI,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;OAClC;;;WAnCU,YAAY;uBAqCvB;CACH;;qBAEc,YAAY","file":"withViewport.js","sourcesContent":["/*! React Starter Kit | MIT License | http://www.reactstarterkit.com/ */\n\nimport React, { Component } from 'react'; // eslint-disable-line no-unused-vars\nimport EventEmitter from 'eventemitter3';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nlet EE;\nlet viewport = {width: 1366, height: 768}; // Default size for server-side rendering\nconst RESIZE_EVENT = 'resize';\n\nfunction handleWindowResize() {\n  if (viewport.width !== window.innerWidth || viewport.height !== window.innerHeight) {\n    viewport = {width: window.innerWidth, height: window.innerHeight};\n    EE.emit(RESIZE_EVENT, viewport);\n  }\n}\n\nfunction withViewport(ComposedComponent) {\n  return class WithViewport extends Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        viewport: canUseDOM ? {width: window.innerWidth, height: window.innerHeight} : viewport,\n      };\n    }\n\n    componentDidMount() {\n      if (!EE) {\n        EE = new EventEmitter();\n        window.addEventListener('resize', handleWindowResize);\n        window.addEventListener('orientationchange', handleWindowResize);\n      }\n\n      EE.on(RESIZE_EVENT, this.handleResize, this);\n    }\n\n    componentWillUnmount() {\n      EE.removeListener(RESIZE_EVENT, this.handleResize, this);\n      if (!EE.listeners(RESIZE_EVENT, true)) {\n        window.removeEventListener('resize', handleWindowResize);\n        window.removeEventListener('orientationchange', handleWindowResize);\n        EE = null;\n      }\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} viewport={this.state.viewport}/>;\n    }\n\n    handleResize(value) {\n      this.setState({viewport: value}); // eslint-disable-line react/no-set-state\n    }\n\n  };\n}\n\nexport default withViewport;\n"]}