{"version":3,"sources":["../../../src/components/Link/Link.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;qBAE4C,OAAO;;;;4BAC9B,qBAAqB;;;;AAE1C,SAAS,gBAAgB,CAAC,KAAK,EAAE;AAC/B,SAAO,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;CAC3B;;AAED,SAAS,eAAe,CAAC,KAAK,EAAE;AAC9B,SAAO,CAAC,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAA,AAAC,CAAC;CAC7E;;IAEK,IAAI;YAAJ,IAAI;;WAAJ,IAAI;0BAAJ,IAAI;;+BAAJ,IAAI;;;eAAJ,IAAI;;WAkCF,kBAAG;mBACyB,IAAI,CAAC,KAAK;UAAlC,EAAE,UAAF,EAAE;UAAE,KAAK,UAAL,KAAK;;UAAK,KAAK;;AAC3B,aAAO,iDAAG,IAAI,EAAE,0BAAS,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,AAAC,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,AAAC,IAAK,KAAK,EAAI,CAAC;KACrG;;;WAnCkB;AACjB,QAAE,EAAE,iBAAU,MAAM,CAAC,UAAU;AAC/B,WAAK,EAAE,iBAAU,MAAM;AACvB,aAAO,EAAE,iBAAU,IAAI;KACxB;;;;WAEoB,eAAC,KAAK,EAAK;AAC9B,UAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,UAAI,WAAW,YAAA,CAAC;;AAEhB,UAAI,MAAK,KAAK,IAAI,MAAK,KAAK,CAAC,OAAO,EAAE;AACpC,mBAAW,GAAG,MAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;OACzC;;AAED,UAAI,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;AACtD,eAAO;OACR;;AAED,UAAI,WAAW,KAAK,KAAK,IAAI,KAAK,CAAC,gBAAgB,KAAK,IAAI,EAAE;AAC5D,uBAAe,GAAG,KAAK,CAAC;OACzB;;AAED,WAAK,CAAC,cAAc,EAAE,CAAC;;AAEvB,UAAI,eAAe,EAAE;AACnB,YAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC;AACjC,kCAAS,SAAS,CAChB,MAAK,KAAK,IAAI,MAAK,KAAK,CAAC,KAAK,IAAI,IAAI,EACtC,MAAK,KAAK,IAAI,MAAK,KAAK,CAAC,EAAE,IAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,AAAC,CAAC,CAAC;OACjE;KACF;;;;SAhCG,IAAI;;;qBAyCK,IAAI","file":"Link.js","sourcesContent":["/*! React Starter Kit | MIT License | http://www.reactstarterkit.com/ */\n\nimport React, { PropTypes, Component } from 'react';\nimport Location from '../../core/Location';\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nclass Link extends Component {\n\n  static propTypes = {\n    to: PropTypes.string.isRequired,\n    state: PropTypes.object,\n    onClick: PropTypes.func,\n  };\n\n  static handleClick = (event) => {\n    let allowTransition = true;\n    let clickResult;\n\n    if (this.props && this.props.onClick) {\n      clickResult = this.props.onClick(event);\n    }\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n      return;\n    }\n\n    if (clickResult === false || event.defaultPrevented === true) {\n      allowTransition = false;\n    }\n\n    event.preventDefault();\n\n    if (allowTransition) {\n      const link = event.currentTarget;\n      Location.pushState(\n        this.props && this.props.state || null,\n        this.props && this.props.to || (link.pathname + link.search));\n    }\n  };\n\n  render() {\n    const { to, query, ...props } = this.props;\n    return <a href={Location.createHref(to, query)} onClick={Link.handleClick.bind(this)} {...props} />;\n  }\n\n}\n\nexport default Link;\n"]}